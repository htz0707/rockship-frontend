image: ubuntu:22.04

stages:
  - build
  - deploy

variables:
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
  TAG_LATEST: $CI_REGISTRY_IMAGE/rockship/$CI_COMMIT_REF_NAME
  GMAIL_USER: "send.email.service1@gmail.com"
  GMAIL_PASS: "jvvzkmgvtvqbfkjp"

.install_ssh:
  before_script:
    - test -n "$SSH_PRIVATE_KEY" || ( echo "missing variable SSH_PRIVATE_KEY" && exit 1)
    - test -n "$PROJECT_DIR" || ( echo "missing variable PROJECT_DIR" && exit 1)
    - test -n "$ROCKSHIP_REGISTRY_USERNAE" || ( echo "missing variable ROCKSHIP_REGISTRY_USERNAE" && exit 1)
    - test -n "$ROCKSHIP_REGISTRY_PASSWORD" || ( echo "missing variable ROCKSHIP_REGISTRY_PASSWORD" && exit 1)
    - test -n "$CI_REGISTRY_IMAGE" || ( echo "missing variable CI_REGISTRY" && exit 1)
    - apt-get update -qq && apt-get install -qq curl
    - which ssh-agent || apt-get install -qq openssh-client
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - >
      if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]; then
        export DEPLOY_TAG="prod"
      else
        export DEPLOY_TAG="stg"
      fi

build:
  stage: build 
  image:
    name: gcr.io/kaniko-project/executor:v1.10.0-debug
    entrypoint: [""]
  script:
    - >
      if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]; then
        export DEPLOY_TAG="prod"
      else
        export DEPLOY_TAG="stg"
      fi
    - echo "{\"auths\":{\"${CI_REGISTRY_IMAGE}\":{\"auth\":\"$(printf "%s:%s" "${ROCKSHIP_REGISTRY_USERNAE}" "${ROCKSHIP_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --build-arg BOT_PRIVATE_TOKEN=$BOT_PRIVATE_TOKEN
      --build-arg DEPLOY_TAG=$DEPLOY_TAG
      --build-arg CACHEBUST=$CI_COMMIT_SHORT_SHA
      --image-name-tag-with-digest-file "$TAG_LATEST:$DEPLOY_TAG"
      --dockerfile "${CI_PROJECT_DIR}/builder/Dockerfile"
      --destination "$TAG_LATEST:$DEPLOY_TAG"
  only:
    - master
    - dev

deploy-stg:
  extends: .install_ssh
  stage: deploy
  script:
    - ssh $ROCKITFLOW_SERVER_DEV "docker login -u $ROCKSHIP_REGISTRY_USERNAE -p $ROCKSHIP_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE;
      docker pull $TAG_LATEST:$DEPLOY_TAG"
    - ssh $ROCKITFLOW_SERVER_DEV "cd monorepo/aegon;
      make blueprint-construct service=$CI_COMMIT_REF_NAME tag=$DEPLOY_TAG"
  only:
    - dev

deploy-production:
  extends: .install_ssh
  stage: deploy
  environment:
    name: production
    url: https://rockship.co
  script:
    - ssh $ROCKITFLOW_SERVER_PROD "docker login -u $ROCKSHIP_REGISTRY_USERNAE -p $ROCKSHIP_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE;
      docker pull $TAG_LATEST:$DEPLOY_TAG"
    - ssh $ROCKITFLOW_SERVER_PROD "cd monorepo/aegon;
      make blueprint-construct service=$CI_COMMIT_REF_NAME tag=$DEPLOY_TAG"
  only:
    - master
