stages:
  - build
  - deploy

variables:
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$DEPLOY_TAG
  TAG_LATEST: $CI_REGISTRY_IMAGE/rockship/$CI_COMMIT_REF_NAME:$DEPLOY_TAG

build:
  image: docker:20
  stage: build
  variables:  # not strictly needed, depending on runner configuration
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  tags:
    - self-host
  script:
    - test -n "$ROCKSHIP_REGISTRY_USERNAE" || ( echo "missing variable ROCKSHIP_REGISTRY_USERNAE" && exit 1)
    - test -n "$ROCKSHIP_REGISTRY_PASSWORD" || ( echo "missing variable ROCKSHIP_REGISTRY_PASSWORD" && exit 1)
    - test -n "$CI_REGISTRY_IMAGE" || ( echo "missing variable CI_REGISTRY" && exit 1)
    - docker login -u $ROCKSHIP_REGISTRY_USERNAE -p $ROCKSHIP_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - docker build --platform linux/amd64 -f builder/Dockerfile -t $TAG_COMMIT .
    - docker tag $TAG_COMMIT $TAG_LATEST
    - docker push $TAG_LATEST
  only:
    - master
    - dev

deploy:
  image: alpine:3.14
  stage: deploy
  tags:
    - self-host
  script:
    - test -n "$SSH_PRIVATE_KEY" || ( echo "missing variable SSH_PRIVATE_KEY" && exit 1)
    - test -n "$SSH_HOST" || ( echo "missing variable SSH_HOST_STG" && exit 1)
    - apt-get update -qq && apt-get install -qq curl
    - which ssh-agent || apt-get install -qq openssh-client
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh $SSH_HOST "docker pull $TAG_LATEST && docker run -d -p $PORT:3000 $TAG_LATEST"
  only:
    - dev
